df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- c(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value)
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value)
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$Element.Name
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
df$Element.Name
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
unique(df$Element.Name)
df <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value))
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
unique(df$Element.Name)
df <- data.frame(cbind(df$O.NET.SOC.Code, str(df$Element.Name), df$Data.Value))
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7)
df <- df[grep("IM", df$Scale.ID),]
unique(df$Element.Name)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
```{r}
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
```{r}
require(XML) #for reading xml, html
require(stringr) #for regex
require(curl)
require(tidyr)
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df.wide <- spread(df, c(Element.Name, Data.Value))
df.wide <- spread(df, Element.Name)
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df$
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df.wide <- spread(df, Element.Name)
df.wide <- spread(df, O.NET.SOC.Code, Element.Name)
df.wide <- spread(df, Element.Name)
df.wide <- spread(df, Element.Name, Data.Value)
df.wide <- gather(df, Element.Name, Data.Value)
df.wide
df.wide <- spread(df, Element.Name, Data.Value)
#df.wide <- spread(df, Element.Name, Data.Value)
df$Element.Name.factor
#df.wide <- spread(df, Element.Name, Data.Value)
df$Element.Name
#df.wide <- spread(df, Element.Name, Data.Value)
unique(df$Element.Name)
#df.wide <- spread(df, Element.Name, Data.Value)
unique(df$Element.Name)
unique(df$Data.Value)
#df.wide <- spread(df, Element.Name, Data.Value)
unique(df$Element.Name)
unique(df$O.NET.SOC.Code)
data.file <- "data.html"
html.data <- readHTMLTable(data.file)
html.data
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df$
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
df.skills <- data.frame()
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
test <- reshape(df, idvar = "O.NET.SOC.Code", timevar = "Element.Name")
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
test <- reshape(df, idvar = "O.NET.SOC.Code", timevar = "Element.Name", direction = 'wide')
test
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
test <- reshape(df, idvar = "O.NET.SOC.Code", timevar = "Element.Name", direction = 'wide')
test
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
test <- spread(df, key = "O.NET.SOC.Code", value = "Element.Name", direction = 'wide')
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
test <- spread(df, key = "O.NET.SOC.Code", value = "Element.Name")
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
test <- spread(small.data, key = "O.NET.SOC.Code", value = "Element.Name")
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
colnames(small.data) <- ('Code', 'Skill')
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
colnames(small.data) <- c('Code', 'Skill')
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name),)
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
dim(small.data)
test <- spread(small.data, key = "Code", value = "Skill")
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
dim(small.data)
#test <- spread(small.data, key = "Code", value = "Skill")
#test
#df.wide <- spread(df, Element.Name, Data.Value)
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
dim(small.data)
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 1, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(c(df$O.NET.SOC.Code, df$Element.Name))
dim(small.data)
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- data.frame(cbind(df$O.NET.SOC.Code, df$Element.Name))
dim(small.data)
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- c(df$O.NET.SOC.Code, df$Element.Name)
dim(small.data)
small.data#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- c(df$O.NET.SOC.Code, df$Element.Name)
small.data <- data.frame(small.data)
dim(small.data)
small.data#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
dim(small.data)
small.data#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
small.data#test <- spread(small.data, key = "Code", value = "Skill")
#test
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
small.data#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
skills <- c(unique(df$Element.Name))
names <- unique(df$O.NET.SOC.Code)
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
require(data.table)
dcast(setDT(df), O.NET.SOC.Code ~ Element.Name, value.var = skills)
skills <- c(unique(df$Element.Name))
names <- unique(df$O.NET.SOC.Code)
df$Element.Name
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
new.frame = data.frame()
for (name in names){
for (skill in skills){
if (grep(df[df$O.NET.SOC.Code==name]) & grep[df[df$Element.Name==skill]]):
new.frame = data.frame()
for (name in names){
for (skill in skills){
if (grep(df[df$O.NET.SOC.Code==name]) & grep[df[df$Element.Name==skill]])
new.frame[skill][name] = TRUE
else
new.frame[skill][name] = FALSE
}
}
new.frame = data.frame()
for (name in names){
for (skill in skills){
if (grep(df[df$O.NET.SOC.Code==name]) & grep[df[df$Element.Name==skill]]){
new.frame[skill][name] = TRUE
}
else{
new.frame[skill][name] = FALSE
}
}
}
new.frame = data.frame()
for (name in names){
for (skill in skills){
if (which(grepl(df, "name") & grepl(df, "skill"){
(which(grepl(df, "name") & grepl(df, "skill")
which(grepl(df, "name") & grepl(df, "skill")
which(grepl(df, "name") & grepl(df, "skill"))
skills
which(grepl(df, "1111") & grepl(df, "skill"))
skills
#which(grepl(df, "1111") & grepl(df, "skill"))
df$Element.Name
which(grepl(df, "1111") & grepl(df, "skill"))
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
df$Element.Name
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
df$Element.Name
which(grepl(df, "1111") & grepl(df, "skill"))
skills
which(grepl(df, "1111") & grepl(df, "skill"))
skills
#which(grepl(df, "1111") & grepl(df, "skill"))
skills
which(grepl(df, "1111") & grepl(df, "Writing"))
skills
which(grepl("1111", df) & grepl("Writing", df))
factor(df$Element.Name)
factor(unique(df$Element.Name))
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value>2.5]
skills <- unique(df$Element.Name)
names <- unique(df$O.NET.SOC.Code)
df$Element.Name
## TO DO MATch skills with list
small.data <- matrix(c(df$O.NET.SOC.Code, df$Element.Name), ncol=2)
small.data <- data.frame(small.data)
colnames(small.data) <- c("Code", "Skill")
small.data
#test <- spread(small.data, key = "Code", value = "Skill")
#test
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value>2.5]
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value>2.5]
df$O.NET.SOC.Code
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df[df$Data.Value>2.5]]
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df[df$Data.Value>2.5]]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value>2.5]
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value>2.5]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5, ]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5, ]
df
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df$Data.Value
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
hist(df$Data.Value)
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[,df$Data.Value >=2.5]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5,]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5,]
df
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df <- df[df$Data.Value >=2.5,]
df$O.NET.SOC.Code == 1111
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
curl_download("https://www.onetcenter.org/dl_files/database/db_23_0_text/Skills.txt", "Skills.txt")
df<- read.table("Skills.txt", sep = '\t', header = TRUE)
df <- df[grep("15-", df$O.NET.SOC.Code),]
df$O.NET.SOC.Code <- substr(x = df$O.NET.SOC.Code, 4, 7) #drops sub occupation data
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
unique(df$Element.Name)
df
source('~/GitHub/data-skills/TechSkills/TechSkills.R', echo=TRUE)
# Dependencies
suppressWarnings(library(XML, quietly =TRUE)) #for reading xml, html
suppressWarnings(library(stringr, quietly =TRUE)) #for regex
suppressWarnings(library(curl, quietly =TRUE)) #for downloading url file
suppressWarnings(library(tidyr, quietly =TRUE)) #for data manipulation
suppressWarnings(library(dplyr, quietly =TRUE)) #for data manipulation
suppressWarnings(library(ggplot2, quietly =TRUE)) #for graphs
suppressWarnings(library(knitr, quietly =TRUE)) #for table design
suppressWarnings(library(kableExtra, quietly =TRUE)) #for table design
# Downloading
#We will use the onet database to generate our list of skills.
############################################
try(setwd('TechSkills'))
# Downloading
#We will use the onet database to generate our list of skills.
curl_download("https://www.onetcenter.org/dl_files/database/db_23_0_text/Tools%20and%20Technology.txt", "TechSkills.txt")
# Reading File
# The code below reads the data and discards all of the non mathematics fields.
df<- read.csv("TechSkills.txt", sep = '\t', header = TRUE, quote = "")
df <- df[grep("15-", df$O.NET.SOC.Code),]
# Dependencies
suppressWarnings(library(XML, quietly =TRUE)) #for reading xml, html
suppressWarnings(library(stringr, quietly =TRUE)) #for regex
suppressWarnings(library(curl, quietly =TRUE)) #for downloading url file
suppressWarnings(library(tidyr, quietly =TRUE)) #for data manipulation
suppressWarnings(library(dplyr, quietly =TRUE)) #for data manipulation
suppressWarnings(library(ggplot2, quietly =TRUE)) #for graphs
suppressWarnings(library(knitr, quietly =TRUE)) #for table design
suppressWarnings(library(kableExtra, quietly =TRUE)) #for table design
# Downloading
#We will use the onet database to generate our list of skills.
############################################
try(setwd('TechSkills'))
# Downloading
#We will use the onet database to generate our list of skills.
curl_download("https://www.onetcenter.org/dl_files/database/db_23_0_text/Tools%20and%20Technology.txt", "TechSkills.txt")
# Reading File
# The code below reads the data and discards all of the non mathematics fields.
df<- read.csv("TechSkills.txt", sep = '\t', header = TRUE, quote = "")
df <- df[grep("15-", df$O.NET.SOC.Code),]
# Cleaning Data
df <- df[grep(".00$", df$O.NET.SOC.Code),] # limit SOC Code to major groups only
df <- df[grep("IM", df$Scale.ID),] # only cares about importance data
df <- df[grep("N", df$Recommend.Suppress),] # only cares about unsuppressed data
skillsdf <- data.frame(df$O.NET.SOC.Code, df$Element.Name, df$Data.Value) #subsets fields for analysis
